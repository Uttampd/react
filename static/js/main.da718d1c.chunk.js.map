{"version":3,"sources":["reportWebVitals.js","Components/BootReactForm.js","Components/Formcomp.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","BootReactForm","Component","props","handleUserNameChange","event","setState","username","target","value","handlePasswordChange","password","handleAgeChange","age","handleGenderChange","gender","handleCityChange","city","handleCommentsChange","comments","checked","handleSubmitChange","alert","state","chkbox","chkbox1","preventDefault","handleChkboxChange","handleChkbox1Change","resetForm","bind","className","onSubmit","this","type","onChange","placeholder","required","name","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da718d1c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react'\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\n\r\nimport './BootReactForm.css'\r\n\r\nexport class BootReactForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            age: '',\r\n            gender: 'Male',\r\n            city: '',\r\n            comments: '',\r\n            chkbox : false,\r\n            chkbox1 : false \r\n            \r\n\r\n        }\r\n        this.handleCityChange = this.handleCityChange.bind(this)\r\n    }\r\n\r\n    handleUserNameChange = (event) => {\r\n        this.setState({\r\n            username: event.target.value\r\n        })\r\n    }\r\n\r\n    handlePasswordChange = (event) => {\r\n        this.setState({\r\n            password: event.target.value\r\n        })\r\n    }\r\n\r\n    handleAgeChange = (event) => {\r\n        this.setState({\r\n            age: event.target.value\r\n        })\r\n    }\r\n\r\n    handleGenderChange = (event) => {\r\n        this.setState({\r\n            gender: event.target.value\r\n        })\r\n    }\r\n\r\n    handleCityChange = (event) => {\r\n        this.setState({\r\n            city: event.target.value\r\n        })\r\n    }\r\n\r\n    handleCommentsChange = (event) => {\r\n        this.setState({\r\n            comments: event.target.checked\r\n        })\r\n    }\r\n\r\n    handleSubmitChange = (event) => {\r\n        alert(`Hello :  ${this.state.username} ,you are ${this.state.age} years old , your gender is ${this.state.gender} , you reside in ${this.state.city} , your hobbies are ${this.state.chkbox} , ${this.state.chkbox1}`)\r\n        event.preventDefault()\r\n\r\n\r\n    }\r\n\r\n    handleChkboxChange = (event) => {\r\n        this.setState({\r\n            chkbox: event.target.value\r\n           \r\n        })\r\n    }\r\n\r\n    handleChkbox1Change = (event) => {\r\n        this.setState({\r\n            chkbox1: event.target.value\r\n        })\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: '',\r\n            age: '',\r\n            gender: 'Male',\r\n            city: 'City not selected',\r\n            comments: '',\r\n            chkbox: false,\r\n            chkbox1: false\r\n\r\n        })\r\n       \r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"  container form-horizontal form-inline\">\r\n            <form className=\"center_div \"  onSubmit={this.handleSubmitChange}>\r\n\r\n                <br /><br />\r\n                <div className=\"text-center \">\r\n                <h1><u>USER REGISTRATION FORM</u></h1>\r\n                </div><br /><br />\r\n\r\n                <div className=\"form-group form-inline\">\r\n                <label>Username</label>\r\n                <input type=\"text\" value={this.state.username} onChange={this.handleUserNameChange} className=\"form-control\" placeholder=\"Enter username\" required /><br /><br />\r\n                </div>\r\n\r\n                <div className=\"form-group form-inline\">\r\n                <label>Password</label>\r\n                <input type=\"password\" value={this.state.password} onChange={this.handlePasswordChange} className=\"form-control\" placeholder=\"Enter password\" required /><br /><br />\r\n                </div>\r\n\r\n                <div className=\"form-group form-inline\">\r\n                <label>Age</label>\r\n                <input type=\"number\" value={this.state.age} onChange={this.handleAgeChange} className=\"form-control\" required /><br /><br />\r\n                </div>\r\n\r\n                <div className=\" form-group radio-inline\">\r\n                <label className=\"col-sm-6\">Gender</label>\r\n                <input type=\"radio\" name=\"gender\" value=\"Male\" onChange={this.handleGenderChange} className=\"form-control chk\" required />Male\r\n                <input type=\"radio\" name=\"gender\" value=\"Female\" onChange={this.handleGenderChange} className=\"form-control chk\" required />Female<br /><br />\r\n                </div>\r\n\r\n                <div className=\"form-group form-inline\">\r\n                <label className=\"col-sm-6\">City</label>\r\n                <select value={this.state.city} onChange={this.handleCityChange} className=\"form-control\" placeholder=\"Select city\" required>\r\n                    <option value=\"City not selected\">Select</option>\r\n                    <option value=\"Margao\">Margao</option>\r\n                    <option value=\"Panaji\">Panaji</option>\r\n                    <option value=\"Ponda\">Ponda</option>\r\n                </select><br /><br />\r\n                </div>\r\n\r\n                \r\n                <div className=\" form-group checkbox-inline\">\r\n                <label className=\"col-sm-6\">Hobbies</label>\r\n                <input type=\"checkbox\" name=\"chkbox\" checked={this.chkbox}  onChange={this.handleChkboxChange} value = \"painting\"  className=\"form-control chk\" required />Painting\r\n                <input type=\"checkbox\" name=\"chkbox1\" checked={this.chkbox1} onChange={this.handleChkbox1Change} value = \"cricket\" className=\"form-control chk\" required />Cricket<br /><br />\r\n                </div>\r\n                \r\n\r\n                <div className=\"form-group \">\r\n                <label className=\"col-sm-6\">Upload a file</label>\r\n                <input type=\"file\" className=\"col-sm-5\"/><br /><br />\r\n                </div>\r\n\r\n                <div className=\"form-group form-inline\">\r\n                <label className=\"col-sm-6\">Comments</label>\r\n                <textarea value={this.state.comments} onChange={this.handleCommentsChange} className=\"form-control\" placeholder=\"Any comments\">say something</textarea><br /><br />\r\n                </div>\r\n\r\n                \r\n                <div className=\"form-group form-inline\">\r\n                <button type=\"submit\" className=\"btn btn-success col-md-4 marg \">Submit</button>\r\n                <button type=\"reset\" onClick={this.resetForm} className=\"btn btn-danger col-md-4 \">Reset</button>\r\n                </div>\r\n\r\n                \r\n\r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BootReactForm\r\n","import React, { Component } from 'react'\r\nimport './Formcomp.css'\r\n\r\nclass Formcomp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            username :'',\r\n            password : '',\r\n            age : '',\r\n            gender : 'Male',\r\n            city : '',\r\n            comments : ''\r\n\r\n        }\r\n    }\r\n\r\n    handleUserNameChange = (event) => {\r\n        this.setState ({\r\n            username : event.target.value\r\n        })\r\n    }\r\n\r\n    handlePasswordChange = (event) => {\r\n        this.setState ({\r\n            password: event.target.value\r\n        })\r\n    }\r\n\r\n    handleAgeChange = (event) => {\r\n        this.setState ({\r\n            age : event.target.value\r\n        })\r\n    }\r\n\r\n    handleGenderChange = (event) => {\r\n        this.setState ({\r\n            gender : event.target.value\r\n        })\r\n    }\r\n\r\n    handleCityChange = (event) => {\r\n        this.setState ({\r\n            city : event.target.value\r\n        })\r\n    }\r\n\r\n    handleCommentsChange = (event) => {\r\n        this.setState ({\r\n            comments : event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmitChange = (event) => {\r\n            alert (`you have entered :  ${this.state.username} , ${this.state.age} , ${this.state.gender} , ${this.state.city} ,${this.state.chkbox} , ${this.state.chkbox1}`)\r\n            event.preventDefault()\r\n            \r\n    \r\n    }\r\n\r\n    handleChkboxChange = (event) => {\r\n        this.setState ({\r\n            chkbox : event.target.value\r\n        })\r\n    }\r\n\r\n    handleChkbox1Change = (event) => {\r\n        this.setState ({\r\n            chkbox1 : event.target.value\r\n        })\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState({\r\n            username :'',\r\n            password : '',\r\n            age : '',\r\n            gender : 'Male',\r\n            city : 'City not selected',\r\n            comments : '',\r\n            chkbox : 'false',\r\n            chkbox1 : 'false'\r\n\r\n        })\r\n        this.handleCityChange = this.handleCityChange.bind(this)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit = {this.handleSubmitChange}>\r\n\r\n                <br/><br/>\r\n\r\n                <h1><u>USER REGISTRATION FORM</u></h1>\r\n\r\n\r\n                <label>Username</label>\r\n                <input type=\"text\" value = {this.state.username} onChange = {this.handleUserNameChange} placeholder = \"Enter username\" required/><br/><br/>\r\n\r\n                <label>Password</label>\r\n                <input type=\"password\" value = {this.state.password} onChange = {this.handlePasswordChange} placeholder = \"Enter password\" required/><br/><br/>\r\n\r\n                <label>Age</label>\r\n                <input type=\"number\" value = {this.state.age} onChange = {this.handleAgeChange} required/><br/><br/>\r\n\r\n\r\n                <label>Gender</label>\r\n                <input type=\"radio\" name = \"gender\"  value = \"Male\" onChange = {this.handleGenderChange} required/>Male\r\n                <input type=\"radio\" name = \"gender\"  value = \"Female\" onChange = {this.handleGenderChange} required/>Female<br/><br/>\r\n\r\n                <label>City</label>\r\n                <select value = {this.state.city} onChange = {this.handleCityChange} placeholder = \"Select city\" required>\r\n                    <option value =\"City not selected\">Select</option>\r\n                    <option value =\"Margao\">Margao</option>\r\n                    <option value =\"Panaji\">Panaji</option>\r\n                    <option value =\"Ponda\">Ponda</option>\r\n                </select><br/><br/>\r\n\r\n                <label>Hobbies</label>\r\n                <input type=\"checkbox\" name = \"chkbox\" checked = {this.state.chkbox} onChange = {this.handleChkboxChange} required/>Painting\r\n                <input type=\"checkbox\" name = \"chkbox1\" checked = {this.state.chkbox1} onChange = {this.handleChkbox1Change} required/>Cricket<br/><br/>\r\n\r\n                <label>Upload a file</label>\r\n                <input type=\"file\"/><br/><br/>\r\n\r\n                <label>Comments</label>\r\n                <textarea value = {this.state.comments} onChange = {this.handleCommentsChange} placeholder = \"Any comments\">say something</textarea><br/><br/>\r\n\r\n                <button type =\"submit\">Submit</button>\r\n                <button type =\"reset\" onClick = \"resetForm\">Reset</button>\r\n\r\n            </form>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Formcomp\r\n","\nimport './App.css';\nimport Formcomp from './Components/Formcomp';\nimport BootReactForm from './Components/BootReactForm'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BootReactForm></BootReactForm>\n      {/* <Formcomp></Formcomp> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}